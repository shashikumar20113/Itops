/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.lti.itops.ipac.custcatmgmt.service.base;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.transaction.Transactional;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import com.lti.itops.ipac.custcatmgmt.model.TTDPSPTaskCustomerMap;
import com.lti.itops.ipac.custcatmgmt.service.TTDPSPTaskCustomerMapLocalService;
import com.lti.itops.ipac.custcatmgmt.service.persistence.TTDPSPCustDecisionTaskTablePersistence;
import com.lti.itops.ipac.custcatmgmt.service.persistence.TTDPSPTaskCustomerMapPersistence;
import com.lti.itops.ipac.custcatmgmt.service.persistence.TTDPSubProcessCustomerMapPersistence;
import com.lti.itops.ipac.custcatmgmt.service.persistence.TTDProcessCustomerMapPersistence;
import com.lti.itops.ipac.custcatmgmt.service.persistence.TTDeliverableCustomerMapPersistence;
import com.lti.itops.ipac.custcatmgmt.service.persistence.TTechnologyCustomerMapPersistence;
import com.lti.itops.ipac.custcatmgmt.service.persistence.TowerCustomerMapPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the ttdpsp task customer map local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.lti.itops.ipac.custcatmgmt.service.impl.TTDPSPTaskCustomerMapLocalServiceImpl}.
 * </p>
 *
 * @author sunprabh
 * @see com.lti.itops.ipac.custcatmgmt.service.impl.TTDPSPTaskCustomerMapLocalServiceImpl
 * @see com.lti.itops.ipac.custcatmgmt.service.TTDPSPTaskCustomerMapLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class TTDPSPTaskCustomerMapLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements TTDPSPTaskCustomerMapLocalService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.lti.itops.ipac.custcatmgmt.service.TTDPSPTaskCustomerMapLocalServiceUtil} to access the ttdpsp task customer map local service.
	 */

	/**
	 * Adds the ttdpsp task customer map to the database. Also notifies the appropriate model listeners.
	 *
	 * @param ttdpspTaskCustomerMap the ttdpsp task customer map
	 * @return the ttdpsp task customer map that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public TTDPSPTaskCustomerMap addTTDPSPTaskCustomerMap(
		TTDPSPTaskCustomerMap ttdpspTaskCustomerMap) {
		ttdpspTaskCustomerMap.setNew(true);

		return ttdpspTaskCustomerMapPersistence.update(ttdpspTaskCustomerMap);
	}

	/**
	 * Creates a new ttdpsp task customer map with the primary key. Does not add the ttdpsp task customer map to the database.
	 *
	 * @param TTDPSPTaskCustomerId the primary key for the new ttdpsp task customer map
	 * @return the new ttdpsp task customer map
	 */
	@Override
	@Transactional(enabled = false)
	public TTDPSPTaskCustomerMap createTTDPSPTaskCustomerMap(
		long TTDPSPTaskCustomerId) {
		return ttdpspTaskCustomerMapPersistence.create(TTDPSPTaskCustomerId);
	}

	/**
	 * Deletes the ttdpsp task customer map with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param TTDPSPTaskCustomerId the primary key of the ttdpsp task customer map
	 * @return the ttdpsp task customer map that was removed
	 * @throws PortalException if a ttdpsp task customer map with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public TTDPSPTaskCustomerMap deleteTTDPSPTaskCustomerMap(
		long TTDPSPTaskCustomerId) throws PortalException {
		return ttdpspTaskCustomerMapPersistence.remove(TTDPSPTaskCustomerId);
	}

	/**
	 * Deletes the ttdpsp task customer map from the database. Also notifies the appropriate model listeners.
	 *
	 * @param ttdpspTaskCustomerMap the ttdpsp task customer map
	 * @return the ttdpsp task customer map that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public TTDPSPTaskCustomerMap deleteTTDPSPTaskCustomerMap(
		TTDPSPTaskCustomerMap ttdpspTaskCustomerMap) {
		return ttdpspTaskCustomerMapPersistence.remove(ttdpspTaskCustomerMap);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(TTDPSPTaskCustomerMap.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return ttdpspTaskCustomerMapPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.lti.itops.ipac.custcatmgmt.model.impl.TTDPSPTaskCustomerMapModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return ttdpspTaskCustomerMapPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.lti.itops.ipac.custcatmgmt.model.impl.TTDPSPTaskCustomerMapModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return ttdpspTaskCustomerMapPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return ttdpspTaskCustomerMapPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return ttdpspTaskCustomerMapPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public TTDPSPTaskCustomerMap fetchTTDPSPTaskCustomerMap(
		long TTDPSPTaskCustomerId) {
		return ttdpspTaskCustomerMapPersistence.fetchByPrimaryKey(TTDPSPTaskCustomerId);
	}

	/**
	 * Returns the ttdpsp task customer map with the primary key.
	 *
	 * @param TTDPSPTaskCustomerId the primary key of the ttdpsp task customer map
	 * @return the ttdpsp task customer map
	 * @throws PortalException if a ttdpsp task customer map with the primary key could not be found
	 */
	@Override
	public TTDPSPTaskCustomerMap getTTDPSPTaskCustomerMap(
		long TTDPSPTaskCustomerId) throws PortalException {
		return ttdpspTaskCustomerMapPersistence.findByPrimaryKey(TTDPSPTaskCustomerId);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(ttdpspTaskCustomerMapLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(TTDPSPTaskCustomerMap.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("TTDPSPTaskCustomerId");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(ttdpspTaskCustomerMapLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(TTDPSPTaskCustomerMap.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName(
			"TTDPSPTaskCustomerId");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(ttdpspTaskCustomerMapLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(TTDPSPTaskCustomerMap.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("TTDPSPTaskCustomerId");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return ttdpspTaskCustomerMapLocalService.deleteTTDPSPTaskCustomerMap((TTDPSPTaskCustomerMap)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return ttdpspTaskCustomerMapPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the ttdpsp task customer maps.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.lti.itops.ipac.custcatmgmt.model.impl.TTDPSPTaskCustomerMapModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of ttdpsp task customer maps
	 * @param end the upper bound of the range of ttdpsp task customer maps (not inclusive)
	 * @return the range of ttdpsp task customer maps
	 */
	@Override
	public List<TTDPSPTaskCustomerMap> getTTDPSPTaskCustomerMaps(int start,
		int end) {
		return ttdpspTaskCustomerMapPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of ttdpsp task customer maps.
	 *
	 * @return the number of ttdpsp task customer maps
	 */
	@Override
	public int getTTDPSPTaskCustomerMapsCount() {
		return ttdpspTaskCustomerMapPersistence.countAll();
	}

	/**
	 * Updates the ttdpsp task customer map in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param ttdpspTaskCustomerMap the ttdpsp task customer map
	 * @return the ttdpsp task customer map that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public TTDPSPTaskCustomerMap updateTTDPSPTaskCustomerMap(
		TTDPSPTaskCustomerMap ttdpspTaskCustomerMap) {
		return ttdpspTaskCustomerMapPersistence.update(ttdpspTaskCustomerMap);
	}

	/**
	 * Returns the tower customer map local service.
	 *
	 * @return the tower customer map local service
	 */
	public com.lti.itops.ipac.custcatmgmt.service.TowerCustomerMapLocalService getTowerCustomerMapLocalService() {
		return towerCustomerMapLocalService;
	}

	/**
	 * Sets the tower customer map local service.
	 *
	 * @param towerCustomerMapLocalService the tower customer map local service
	 */
	public void setTowerCustomerMapLocalService(
		com.lti.itops.ipac.custcatmgmt.service.TowerCustomerMapLocalService towerCustomerMapLocalService) {
		this.towerCustomerMapLocalService = towerCustomerMapLocalService;
	}

	/**
	 * Returns the tower customer map persistence.
	 *
	 * @return the tower customer map persistence
	 */
	public TowerCustomerMapPersistence getTowerCustomerMapPersistence() {
		return towerCustomerMapPersistence;
	}

	/**
	 * Sets the tower customer map persistence.
	 *
	 * @param towerCustomerMapPersistence the tower customer map persistence
	 */
	public void setTowerCustomerMapPersistence(
		TowerCustomerMapPersistence towerCustomerMapPersistence) {
		this.towerCustomerMapPersistence = towerCustomerMapPersistence;
	}

	/**
	 * Returns the tt deliverable customer map local service.
	 *
	 * @return the tt deliverable customer map local service
	 */
	public com.lti.itops.ipac.custcatmgmt.service.TTDeliverableCustomerMapLocalService getTTDeliverableCustomerMapLocalService() {
		return ttDeliverableCustomerMapLocalService;
	}

	/**
	 * Sets the tt deliverable customer map local service.
	 *
	 * @param ttDeliverableCustomerMapLocalService the tt deliverable customer map local service
	 */
	public void setTTDeliverableCustomerMapLocalService(
		com.lti.itops.ipac.custcatmgmt.service.TTDeliverableCustomerMapLocalService ttDeliverableCustomerMapLocalService) {
		this.ttDeliverableCustomerMapLocalService = ttDeliverableCustomerMapLocalService;
	}

	/**
	 * Returns the tt deliverable customer map persistence.
	 *
	 * @return the tt deliverable customer map persistence
	 */
	public TTDeliverableCustomerMapPersistence getTTDeliverableCustomerMapPersistence() {
		return ttDeliverableCustomerMapPersistence;
	}

	/**
	 * Sets the tt deliverable customer map persistence.
	 *
	 * @param ttDeliverableCustomerMapPersistence the tt deliverable customer map persistence
	 */
	public void setTTDeliverableCustomerMapPersistence(
		TTDeliverableCustomerMapPersistence ttDeliverableCustomerMapPersistence) {
		this.ttDeliverableCustomerMapPersistence = ttDeliverableCustomerMapPersistence;
	}

	/**
	 * Returns the ttd process customer map local service.
	 *
	 * @return the ttd process customer map local service
	 */
	public com.lti.itops.ipac.custcatmgmt.service.TTDProcessCustomerMapLocalService getTTDProcessCustomerMapLocalService() {
		return ttdProcessCustomerMapLocalService;
	}

	/**
	 * Sets the ttd process customer map local service.
	 *
	 * @param ttdProcessCustomerMapLocalService the ttd process customer map local service
	 */
	public void setTTDProcessCustomerMapLocalService(
		com.lti.itops.ipac.custcatmgmt.service.TTDProcessCustomerMapLocalService ttdProcessCustomerMapLocalService) {
		this.ttdProcessCustomerMapLocalService = ttdProcessCustomerMapLocalService;
	}

	/**
	 * Returns the ttd process customer map persistence.
	 *
	 * @return the ttd process customer map persistence
	 */
	public TTDProcessCustomerMapPersistence getTTDProcessCustomerMapPersistence() {
		return ttdProcessCustomerMapPersistence;
	}

	/**
	 * Sets the ttd process customer map persistence.
	 *
	 * @param ttdProcessCustomerMapPersistence the ttd process customer map persistence
	 */
	public void setTTDProcessCustomerMapPersistence(
		TTDProcessCustomerMapPersistence ttdProcessCustomerMapPersistence) {
		this.ttdProcessCustomerMapPersistence = ttdProcessCustomerMapPersistence;
	}

	/**
	 * Returns the ttdpsp cust decision task table local service.
	 *
	 * @return the ttdpsp cust decision task table local service
	 */
	public com.lti.itops.ipac.custcatmgmt.service.TTDPSPCustDecisionTaskTableLocalService getTTDPSPCustDecisionTaskTableLocalService() {
		return ttdpspCustDecisionTaskTableLocalService;
	}

	/**
	 * Sets the ttdpsp cust decision task table local service.
	 *
	 * @param ttdpspCustDecisionTaskTableLocalService the ttdpsp cust decision task table local service
	 */
	public void setTTDPSPCustDecisionTaskTableLocalService(
		com.lti.itops.ipac.custcatmgmt.service.TTDPSPCustDecisionTaskTableLocalService ttdpspCustDecisionTaskTableLocalService) {
		this.ttdpspCustDecisionTaskTableLocalService = ttdpspCustDecisionTaskTableLocalService;
	}

	/**
	 * Returns the ttdpsp cust decision task table persistence.
	 *
	 * @return the ttdpsp cust decision task table persistence
	 */
	public TTDPSPCustDecisionTaskTablePersistence getTTDPSPCustDecisionTaskTablePersistence() {
		return ttdpspCustDecisionTaskTablePersistence;
	}

	/**
	 * Sets the ttdpsp cust decision task table persistence.
	 *
	 * @param ttdpspCustDecisionTaskTablePersistence the ttdpsp cust decision task table persistence
	 */
	public void setTTDPSPCustDecisionTaskTablePersistence(
		TTDPSPCustDecisionTaskTablePersistence ttdpspCustDecisionTaskTablePersistence) {
		this.ttdpspCustDecisionTaskTablePersistence = ttdpspCustDecisionTaskTablePersistence;
	}

	/**
	 * Returns the ttdpsp task customer map local service.
	 *
	 * @return the ttdpsp task customer map local service
	 */
	public TTDPSPTaskCustomerMapLocalService getTTDPSPTaskCustomerMapLocalService() {
		return ttdpspTaskCustomerMapLocalService;
	}

	/**
	 * Sets the ttdpsp task customer map local service.
	 *
	 * @param ttdpspTaskCustomerMapLocalService the ttdpsp task customer map local service
	 */
	public void setTTDPSPTaskCustomerMapLocalService(
		TTDPSPTaskCustomerMapLocalService ttdpspTaskCustomerMapLocalService) {
		this.ttdpspTaskCustomerMapLocalService = ttdpspTaskCustomerMapLocalService;
	}

	/**
	 * Returns the ttdpsp task customer map persistence.
	 *
	 * @return the ttdpsp task customer map persistence
	 */
	public TTDPSPTaskCustomerMapPersistence getTTDPSPTaskCustomerMapPersistence() {
		return ttdpspTaskCustomerMapPersistence;
	}

	/**
	 * Sets the ttdpsp task customer map persistence.
	 *
	 * @param ttdpspTaskCustomerMapPersistence the ttdpsp task customer map persistence
	 */
	public void setTTDPSPTaskCustomerMapPersistence(
		TTDPSPTaskCustomerMapPersistence ttdpspTaskCustomerMapPersistence) {
		this.ttdpspTaskCustomerMapPersistence = ttdpspTaskCustomerMapPersistence;
	}

	/**
	 * Returns the ttdp sub process customer map local service.
	 *
	 * @return the ttdp sub process customer map local service
	 */
	public com.lti.itops.ipac.custcatmgmt.service.TTDPSubProcessCustomerMapLocalService getTTDPSubProcessCustomerMapLocalService() {
		return ttdpSubProcessCustomerMapLocalService;
	}

	/**
	 * Sets the ttdp sub process customer map local service.
	 *
	 * @param ttdpSubProcessCustomerMapLocalService the ttdp sub process customer map local service
	 */
	public void setTTDPSubProcessCustomerMapLocalService(
		com.lti.itops.ipac.custcatmgmt.service.TTDPSubProcessCustomerMapLocalService ttdpSubProcessCustomerMapLocalService) {
		this.ttdpSubProcessCustomerMapLocalService = ttdpSubProcessCustomerMapLocalService;
	}

	/**
	 * Returns the ttdp sub process customer map persistence.
	 *
	 * @return the ttdp sub process customer map persistence
	 */
	public TTDPSubProcessCustomerMapPersistence getTTDPSubProcessCustomerMapPersistence() {
		return ttdpSubProcessCustomerMapPersistence;
	}

	/**
	 * Sets the ttdp sub process customer map persistence.
	 *
	 * @param ttdpSubProcessCustomerMapPersistence the ttdp sub process customer map persistence
	 */
	public void setTTDPSubProcessCustomerMapPersistence(
		TTDPSubProcessCustomerMapPersistence ttdpSubProcessCustomerMapPersistence) {
		this.ttdpSubProcessCustomerMapPersistence = ttdpSubProcessCustomerMapPersistence;
	}

	/**
	 * Returns the t technology customer map local service.
	 *
	 * @return the t technology customer map local service
	 */
	public com.lti.itops.ipac.custcatmgmt.service.TTechnologyCustomerMapLocalService getTTechnologyCustomerMapLocalService() {
		return tTechnologyCustomerMapLocalService;
	}

	/**
	 * Sets the t technology customer map local service.
	 *
	 * @param tTechnologyCustomerMapLocalService the t technology customer map local service
	 */
	public void setTTechnologyCustomerMapLocalService(
		com.lti.itops.ipac.custcatmgmt.service.TTechnologyCustomerMapLocalService tTechnologyCustomerMapLocalService) {
		this.tTechnologyCustomerMapLocalService = tTechnologyCustomerMapLocalService;
	}

	/**
	 * Returns the t technology customer map persistence.
	 *
	 * @return the t technology customer map persistence
	 */
	public TTechnologyCustomerMapPersistence getTTechnologyCustomerMapPersistence() {
		return tTechnologyCustomerMapPersistence;
	}

	/**
	 * Sets the t technology customer map persistence.
	 *
	 * @param tTechnologyCustomerMapPersistence the t technology customer map persistence
	 */
	public void setTTechnologyCustomerMapPersistence(
		TTechnologyCustomerMapPersistence tTechnologyCustomerMapPersistence) {
		this.tTechnologyCustomerMapPersistence = tTechnologyCustomerMapPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("com.lti.itops.ipac.custcatmgmt.model.TTDPSPTaskCustomerMap",
			ttdpspTaskCustomerMapLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"com.lti.itops.ipac.custcatmgmt.model.TTDPSPTaskCustomerMap");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return TTDPSPTaskCustomerMapLocalService.class.getName();
	}

	protected Class<?> getModelClass() {
		return TTDPSPTaskCustomerMap.class;
	}

	protected String getModelClassName() {
		return TTDPSPTaskCustomerMap.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = ttdpspTaskCustomerMapPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.lti.itops.ipac.custcatmgmt.service.TowerCustomerMapLocalService.class)
	protected com.lti.itops.ipac.custcatmgmt.service.TowerCustomerMapLocalService towerCustomerMapLocalService;
	@BeanReference(type = TowerCustomerMapPersistence.class)
	protected TowerCustomerMapPersistence towerCustomerMapPersistence;
	@BeanReference(type = com.lti.itops.ipac.custcatmgmt.service.TTDeliverableCustomerMapLocalService.class)
	protected com.lti.itops.ipac.custcatmgmt.service.TTDeliverableCustomerMapLocalService ttDeliverableCustomerMapLocalService;
	@BeanReference(type = TTDeliverableCustomerMapPersistence.class)
	protected TTDeliverableCustomerMapPersistence ttDeliverableCustomerMapPersistence;
	@BeanReference(type = com.lti.itops.ipac.custcatmgmt.service.TTDProcessCustomerMapLocalService.class)
	protected com.lti.itops.ipac.custcatmgmt.service.TTDProcessCustomerMapLocalService ttdProcessCustomerMapLocalService;
	@BeanReference(type = TTDProcessCustomerMapPersistence.class)
	protected TTDProcessCustomerMapPersistence ttdProcessCustomerMapPersistence;
	@BeanReference(type = com.lti.itops.ipac.custcatmgmt.service.TTDPSPCustDecisionTaskTableLocalService.class)
	protected com.lti.itops.ipac.custcatmgmt.service.TTDPSPCustDecisionTaskTableLocalService ttdpspCustDecisionTaskTableLocalService;
	@BeanReference(type = TTDPSPCustDecisionTaskTablePersistence.class)
	protected TTDPSPCustDecisionTaskTablePersistence ttdpspCustDecisionTaskTablePersistence;
	@BeanReference(type = TTDPSPTaskCustomerMapLocalService.class)
	protected TTDPSPTaskCustomerMapLocalService ttdpspTaskCustomerMapLocalService;
	@BeanReference(type = TTDPSPTaskCustomerMapPersistence.class)
	protected TTDPSPTaskCustomerMapPersistence ttdpspTaskCustomerMapPersistence;
	@BeanReference(type = com.lti.itops.ipac.custcatmgmt.service.TTDPSubProcessCustomerMapLocalService.class)
	protected com.lti.itops.ipac.custcatmgmt.service.TTDPSubProcessCustomerMapLocalService ttdpSubProcessCustomerMapLocalService;
	@BeanReference(type = TTDPSubProcessCustomerMapPersistence.class)
	protected TTDPSubProcessCustomerMapPersistence ttdpSubProcessCustomerMapPersistence;
	@BeanReference(type = com.lti.itops.ipac.custcatmgmt.service.TTechnologyCustomerMapLocalService.class)
	protected com.lti.itops.ipac.custcatmgmt.service.TTechnologyCustomerMapLocalService tTechnologyCustomerMapLocalService;
	@BeanReference(type = TTechnologyCustomerMapPersistence.class)
	protected TTechnologyCustomerMapPersistence tTechnologyCustomerMapPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
}