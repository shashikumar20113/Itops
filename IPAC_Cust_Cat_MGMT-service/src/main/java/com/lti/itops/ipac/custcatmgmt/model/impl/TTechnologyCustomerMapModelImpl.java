/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.lti.itops.ipac.custcatmgmt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.Validator;

import com.lti.itops.ipac.custcatmgmt.model.TTechnologyCustomerMap;
import com.lti.itops.ipac.custcatmgmt.model.TTechnologyCustomerMapModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

/**
 * The base model implementation for the TTechnologyCustomerMap service. Represents a row in the &quot;IPAC_CUST_CAT_MGMT_TTechnologyCustomerMap&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link TTechnologyCustomerMapModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TTechnologyCustomerMapImpl}.
 * </p>
 *
 * @author sunprabh
 * @see TTechnologyCustomerMapImpl
 * @see TTechnologyCustomerMap
 * @see TTechnologyCustomerMapModel
 * @generated
 */
@ProviderType
public class TTechnologyCustomerMapModelImpl extends BaseModelImpl<TTechnologyCustomerMap>
	implements TTechnologyCustomerMapModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a t technology customer map model instance should use the {@link TTechnologyCustomerMap} interface instead.
	 */
	public static final String TABLE_NAME = "IPAC_CUST_CAT_MGMT_TTechnologyCustomerMap";
	public static final Object[][] TABLE_COLUMNS = {
			{ "TTechnologyCustomerId", Types.BIGINT },
			{ "towerTechnologyId", Types.BIGINT },
			{ "organizationId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "createdBy", Types.BIGINT },
			{ "createdOn", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT },
			{ "modifiedOn", Types.TIMESTAMP },
			{ "statusId", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("TTechnologyCustomerId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("towerTechnologyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("organizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdOn", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedOn", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("statusId", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table IPAC_CUST_CAT_MGMT_TTechnologyCustomerMap (TTechnologyCustomerId LONG not null primary key,towerTechnologyId LONG,organizationId LONG,name STRING null,companyId LONG,createdBy LONG,createdOn DATE null,modifiedBy LONG,modifiedOn DATE null,statusId INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table IPAC_CUST_CAT_MGMT_TTechnologyCustomerMap";
	public static final String ORDER_BY_JPQL = " ORDER BY tTechnologyCustomerMap.TTechnologyCustomerId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IPAC_CUST_CAT_MGMT_TTechnologyCustomerMap.TTechnologyCustomerId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.lti.itops.ipac.custcatmgmt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.lti.itops.ipac.custcatmgmt.model.TTechnologyCustomerMap"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.lti.itops.ipac.custcatmgmt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.lti.itops.ipac.custcatmgmt.model.TTechnologyCustomerMap"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.lti.itops.ipac.custcatmgmt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.lti.itops.ipac.custcatmgmt.model.TTechnologyCustomerMap"),
			true);
	public static final long TTECHNOLOGYCUSTOMERID_COLUMN_BITMASK = 1L;
	public static final long ORGANIZATIONID_COLUMN_BITMASK = 2L;
	public static final long TOWERTECHNOLOGYID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.lti.itops.ipac.custcatmgmt.service.util.ServiceProps.get(
				"lock.expiration.time.com.lti.itops.ipac.custcatmgmt.model.TTechnologyCustomerMap"));

	public TTechnologyCustomerMapModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _TTechnologyCustomerId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTTechnologyCustomerId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _TTechnologyCustomerId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TTechnologyCustomerMap.class;
	}

	@Override
	public String getModelClassName() {
		return TTechnologyCustomerMap.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("TTechnologyCustomerId", getTTechnologyCustomerId());
		attributes.put("towerTechnologyId", getTowerTechnologyId());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("name", getName());
		attributes.put("companyId", getCompanyId());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdOn", getCreatedOn());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("modifiedOn", getModifiedOn());
		attributes.put("statusId", getStatusId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long TTechnologyCustomerId = (Long)attributes.get(
				"TTechnologyCustomerId");

		if (TTechnologyCustomerId != null) {
			setTTechnologyCustomerId(TTechnologyCustomerId);
		}

		Long towerTechnologyId = (Long)attributes.get("towerTechnologyId");

		if (towerTechnologyId != null) {
			setTowerTechnologyId(towerTechnologyId);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdOn = (Date)attributes.get("createdOn");

		if (createdOn != null) {
			setCreatedOn(createdOn);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date modifiedOn = (Date)attributes.get("modifiedOn");

		if (modifiedOn != null) {
			setModifiedOn(modifiedOn);
		}

		Integer statusId = (Integer)attributes.get("statusId");

		if (statusId != null) {
			setStatusId(statusId);
		}
	}

	@Override
	public long getTTechnologyCustomerId() {
		return _TTechnologyCustomerId;
	}

	@Override
	public void setTTechnologyCustomerId(long TTechnologyCustomerId) {
		_columnBitmask |= TTECHNOLOGYCUSTOMERID_COLUMN_BITMASK;

		if (!_setOriginalTTechnologyCustomerId) {
			_setOriginalTTechnologyCustomerId = true;

			_originalTTechnologyCustomerId = _TTechnologyCustomerId;
		}

		_TTechnologyCustomerId = TTechnologyCustomerId;
	}

	public long getOriginalTTechnologyCustomerId() {
		return _originalTTechnologyCustomerId;
	}

	@Override
	public long getTowerTechnologyId() {
		return _towerTechnologyId;
	}

	@Override
	public void setTowerTechnologyId(long towerTechnologyId) {
		_columnBitmask |= TOWERTECHNOLOGYID_COLUMN_BITMASK;

		if (!_setOriginalTowerTechnologyId) {
			_setOriginalTowerTechnologyId = true;

			_originalTowerTechnologyId = _towerTechnologyId;
		}

		_towerTechnologyId = towerTechnologyId;
	}

	public long getOriginalTowerTechnologyId() {
		return _originalTowerTechnologyId;
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public String getName(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getName(languageId);
	}

	@Override
	public String getName(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getName(languageId, useDefault);
	}

	@Override
	public String getName(String languageId) {
		return LocalizationUtil.getLocalization(getName(), languageId);
	}

	@Override
	public String getName(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(getName(), languageId,
			useDefault);
	}

	@Override
	public String getNameCurrentLanguageId() {
		return _nameCurrentLanguageId;
	}

	@JSON
	@Override
	public String getNameCurrentValue() {
		Locale locale = getLocale(_nameCurrentLanguageId);

		return getName(locale);
	}

	@Override
	public Map<Locale, String> getNameMap() {
		return LocalizationUtil.getLocalizationMap(getName());
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public void setName(String name, Locale locale) {
		setName(name, locale, LocaleUtil.getDefault());
	}

	@Override
	public void setName(String name, Locale locale, Locale defaultLocale) {
		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(name)) {
			setName(LocalizationUtil.updateLocalization(getName(), "Name",
					name, languageId, defaultLanguageId));
		}
		else {
			setName(LocalizationUtil.removeLocalization(getName(), "Name",
					languageId));
		}
	}

	@Override
	public void setNameCurrentLanguageId(String languageId) {
		_nameCurrentLanguageId = languageId;
	}

	@Override
	public void setNameMap(Map<Locale, String> nameMap) {
		setNameMap(nameMap, LocaleUtil.getDefault());
	}

	@Override
	public void setNameMap(Map<Locale, String> nameMap, Locale defaultLocale) {
		if (nameMap == null) {
			return;
		}

		setName(LocalizationUtil.updateLocalization(nameMap, getName(), "Name",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedOn() {
		return _createdOn;
	}

	@Override
	public void setCreatedOn(Date createdOn) {
		_createdOn = createdOn;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getModifiedOn() {
		return _modifiedOn;
	}

	@Override
	public void setModifiedOn(Date modifiedOn) {
		_modifiedOn = modifiedOn;
	}

	@Override
	public int getStatusId() {
		return _statusId;
	}

	@Override
	public void setStatusId(int statusId) {
		_statusId = statusId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			TTechnologyCustomerMap.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public String[] getAvailableLanguageIds() {
		Set<String> availableLanguageIds = new TreeSet<String>();

		Map<Locale, String> nameMap = getNameMap();

		for (Map.Entry<Locale, String> entry : nameMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		return availableLanguageIds.toArray(new String[availableLanguageIds.size()]);
	}

	@Override
	public String getDefaultLanguageId() {
		String xml = getName();

		if (xml == null) {
			return "";
		}

		Locale defaultLocale = LocaleUtil.getDefault();

		return LocalizationUtil.getDefaultLanguageId(xml, defaultLocale);
	}

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException {
		Locale defaultLocale = LocaleUtil.fromLanguageId(getDefaultLanguageId());

		Locale[] availableLocales = LocaleUtil.fromLanguageIds(getAvailableLanguageIds());

		Locale defaultImportLocale = LocalizationUtil.getDefaultImportLocale(TTechnologyCustomerMap.class.getName(),
				getPrimaryKey(), defaultLocale, availableLocales);

		prepareLocalizedFieldsForImport(defaultImportLocale);
	}

	@Override
	@SuppressWarnings("unused")
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException {
		Locale defaultLocale = LocaleUtil.getDefault();

		String modelDefaultLanguageId = getDefaultLanguageId();

		String name = getName(defaultLocale);

		if (Validator.isNull(name)) {
			setName(getName(modelDefaultLanguageId), defaultLocale);
		}
		else {
			setName(getName(defaultLocale), defaultLocale, defaultLocale);
		}
	}

	@Override
	public TTechnologyCustomerMap toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TTechnologyCustomerMap)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TTechnologyCustomerMapImpl tTechnologyCustomerMapImpl = new TTechnologyCustomerMapImpl();

		tTechnologyCustomerMapImpl.setTTechnologyCustomerId(getTTechnologyCustomerId());
		tTechnologyCustomerMapImpl.setTowerTechnologyId(getTowerTechnologyId());
		tTechnologyCustomerMapImpl.setOrganizationId(getOrganizationId());
		tTechnologyCustomerMapImpl.setName(getName());
		tTechnologyCustomerMapImpl.setCompanyId(getCompanyId());
		tTechnologyCustomerMapImpl.setCreatedBy(getCreatedBy());
		tTechnologyCustomerMapImpl.setCreatedOn(getCreatedOn());
		tTechnologyCustomerMapImpl.setModifiedBy(getModifiedBy());
		tTechnologyCustomerMapImpl.setModifiedOn(getModifiedOn());
		tTechnologyCustomerMapImpl.setStatusId(getStatusId());

		tTechnologyCustomerMapImpl.resetOriginalValues();

		return tTechnologyCustomerMapImpl;
	}

	@Override
	public int compareTo(TTechnologyCustomerMap tTechnologyCustomerMap) {
		long primaryKey = tTechnologyCustomerMap.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TTechnologyCustomerMap)) {
			return false;
		}

		TTechnologyCustomerMap tTechnologyCustomerMap = (TTechnologyCustomerMap)obj;

		long primaryKey = tTechnologyCustomerMap.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		TTechnologyCustomerMapModelImpl tTechnologyCustomerMapModelImpl = this;

		tTechnologyCustomerMapModelImpl._originalTTechnologyCustomerId = tTechnologyCustomerMapModelImpl._TTechnologyCustomerId;

		tTechnologyCustomerMapModelImpl._setOriginalTTechnologyCustomerId = false;

		tTechnologyCustomerMapModelImpl._originalTowerTechnologyId = tTechnologyCustomerMapModelImpl._towerTechnologyId;

		tTechnologyCustomerMapModelImpl._setOriginalTowerTechnologyId = false;

		tTechnologyCustomerMapModelImpl._originalOrganizationId = tTechnologyCustomerMapModelImpl._organizationId;

		tTechnologyCustomerMapModelImpl._setOriginalOrganizationId = false;

		tTechnologyCustomerMapModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TTechnologyCustomerMap> toCacheModel() {
		TTechnologyCustomerMapCacheModel tTechnologyCustomerMapCacheModel = new TTechnologyCustomerMapCacheModel();

		tTechnologyCustomerMapCacheModel.TTechnologyCustomerId = getTTechnologyCustomerId();

		tTechnologyCustomerMapCacheModel.towerTechnologyId = getTowerTechnologyId();

		tTechnologyCustomerMapCacheModel.organizationId = getOrganizationId();

		tTechnologyCustomerMapCacheModel.name = getName();

		String name = tTechnologyCustomerMapCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			tTechnologyCustomerMapCacheModel.name = null;
		}

		tTechnologyCustomerMapCacheModel.companyId = getCompanyId();

		tTechnologyCustomerMapCacheModel.createdBy = getCreatedBy();

		Date createdOn = getCreatedOn();

		if (createdOn != null) {
			tTechnologyCustomerMapCacheModel.createdOn = createdOn.getTime();
		}
		else {
			tTechnologyCustomerMapCacheModel.createdOn = Long.MIN_VALUE;
		}

		tTechnologyCustomerMapCacheModel.modifiedBy = getModifiedBy();

		Date modifiedOn = getModifiedOn();

		if (modifiedOn != null) {
			tTechnologyCustomerMapCacheModel.modifiedOn = modifiedOn.getTime();
		}
		else {
			tTechnologyCustomerMapCacheModel.modifiedOn = Long.MIN_VALUE;
		}

		tTechnologyCustomerMapCacheModel.statusId = getStatusId();

		return tTechnologyCustomerMapCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{TTechnologyCustomerId=");
		sb.append(getTTechnologyCustomerId());
		sb.append(", towerTechnologyId=");
		sb.append(getTowerTechnologyId());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdOn=");
		sb.append(getCreatedOn());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", modifiedOn=");
		sb.append(getModifiedOn());
		sb.append(", statusId=");
		sb.append(getStatusId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.lti.itops.ipac.custcatmgmt.model.TTechnologyCustomerMap");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>TTechnologyCustomerId</column-name><column-value><![CDATA[");
		sb.append(getTTechnologyCustomerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>towerTechnologyId</column-name><column-value><![CDATA[");
		sb.append(getTowerTechnologyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdOn</column-name><column-value><![CDATA[");
		sb.append(getCreatedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedOn</column-name><column-value><![CDATA[");
		sb.append(getModifiedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusId</column-name><column-value><![CDATA[");
		sb.append(getStatusId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = TTechnologyCustomerMap.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			TTechnologyCustomerMap.class, ModelWrapper.class
		};
	private long _TTechnologyCustomerId;
	private long _originalTTechnologyCustomerId;
	private boolean _setOriginalTTechnologyCustomerId;
	private long _towerTechnologyId;
	private long _originalTowerTechnologyId;
	private boolean _setOriginalTowerTechnologyId;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private String _name;
	private String _nameCurrentLanguageId;
	private long _companyId;
	private long _createdBy;
	private Date _createdOn;
	private long _modifiedBy;
	private Date _modifiedOn;
	private int _statusId;
	private long _columnBitmask;
	private TTechnologyCustomerMap _escapedModel;
}